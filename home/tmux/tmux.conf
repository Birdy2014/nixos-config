# unbind all keys
unbind -a -T prefix
unbind -a -T root
unbind -a -T copy-mode
unbind -a -T copy-mode-vi

# set prefix
set-option -g prefix C-q
bind C-q send-prefix

# other settings
set -s escape-time 0
set -g base-index 1
set -g mouse on
set -g set-titles on
set -g set-titles-string 'TMUX - #{pane_title}'
setw -g automatic-rename off
set -g status-keys vi
set -g mode-keys vi
set -g focus-events on
set -g repeat-time 0
set -g set-clipboard on # Use OSC52
set-option -g history-limit 70000

# statusbar
set -g status-bg "#3C3836"
set -g status-fg "#d4be98"

set -g status-justify absolute-centre

set -g status-left-length 40
set -g status-right-length 40
set -g status-left "#[bg=#e78a4e, fg=#282828, bold] #{session_name} #[bg=#504945, fg=#d4be98] #{pane_title} "
set -g status-right "#[fg=#d4be98 bold] %H:%M %d-%m-%Y #[bg=#e78a4e, fg=#282828, bold] #H "

set -g window-status-current-format "#[bg=#504945, fg=#d4be98 bold] #I #W #{?window_zoomed_flag,Û∞çâ ,}"
set -g window-status-format "#[fg=#e78a4e, bold] #I #W #{?window_zoomed_flag,üîç ,}"

# keybindings
bind -N "Split horizontal"        -T prefix |     split-window -h
bind -N "Split vertical"          -T prefix -     split-window -v

bind -N "Open the command prompt" -T prefix :     command-prompt
bind -N "List keys"               -T prefix ?     list-keys -N
bind -N "Detach"                  -T prefix d     detach-client

# Panes
bind                              -T prefix q     display-panes
bind                              -T prefix r     refresh-client
bind                              -T prefix s     choose-tree -Zs
bind -N "Close pane"              -T prefix x     confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind -N "Zoom pane"               -T prefix z     resize-pane -Z

# Windows
bind -N "Go to next window"       -n        'M-l' next-window
bind -N "Go to previous window"   -n        'M-h' previous-window
bind -N "Choose window"           -T prefix w     choose-tree -Zw
bind -N "Next layout"             -T prefix Space next-layout
bind -N "Go to window 0"          -T prefix 0     select-window -t :=0
bind -N "Go to window 1"          -T prefix 1     select-window -t :=1
bind -N "Go to window 2"          -T prefix 2     select-window -t :=2
bind -N "Go to window 3"          -T prefix 3     select-window -t :=3
bind -N "Go to window 4"          -T prefix 4     select-window -t :=4
bind -N "Go to window 5"          -T prefix 5     select-window -t :=5
bind -N "Go to window 6"          -T prefix 6     select-window -t :=6
bind -N "Go to window 7"          -T prefix 7     select-window -t :=7
bind -N "Go to window 8"          -T prefix 8     select-window -t :=8
bind -N "Go to window 9"          -T prefix 9     select-window -t :=9
bind -N "Open new window"         -T prefix c     new-window
bind                              -T prefix f     command-prompt { find-window -Z "%%" }
bind -N "Save history"            -T prefix P     command-prompt -p 'save history to filename:' -I '/tmp/tmux-history-%Y%m%d-%H%M%S.out' 'capture-pane -eJNS -80000 ; save-buffer %1 ; delete-buffer'
bind -N "Rename Window"           -T prefix \$    command-prompt -I "#W" { rename-window "%%" }

# Buffers (clipboard)
bind                              -T prefix \#    list-buffers
bind                              -T prefix p     choose-buffer
bind                              -T prefix [     copy-mode
bind                              -T prefix ]     paste-buffer -p

# Copy mode
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi k      send -X cursor-up
bind -T copy-mode-vi j      send -X cursor-down
bind -T copy-mode-vi h      send -X cursor-left
bind -T copy-mode-vi l      send -X cursor-right
bind -T copy-mode-vi v      if -F "#{selection_present}" { send -X clear-selection } { send -X begin-selection }
bind -T copy-mode-vi y      send -X copy-selection-no-clear
bind -T copy-mode-vi Enter  send -X copy-selection-and-cancel
bind -T copy-mode-vi g      send -X history-top
bind -T copy-mode-vi G      send -X history-bottom
bind -T copy-mode-vi ^      send -X back-to-indentation
bind -T copy-mode-vi 0      send -X start-of-line
bind -T copy-mode-vi \$     send -X end-of-line
bind -T copy-mode-vi o      send -X other-end
bind -T copy-mode-vi n      send -X search-again
bind -T copy-mode-vi f      command-prompt -1 -p "(jump forward)" { send-keys -X jump-forward "%%" }
bind -T copy-mode-vi b      send -X previous-word
bind -T copy-mode-vi e      send -X next-word-end
bind -T copy-mode-vi V      send -X select-line
bind -T copy-mode-vi W      send -X next-space
bind -T copy-mode-vi L      send -X bottom-line
bind -T copy-mode-vi M      send -X middle-line
bind -T copy-mode-vi N      send -X search-reverse
bind -T copy-mode-vi H      send -X top-line
bind -T copy-mode-vi E      send -X next-space-end
bind -T copy-mode-vi B      send -X previous-space
bind -T copy-mode-vi \;     send -X jump-again
bind -T copy-mode-vi ?      command-prompt -T search -p "(search up)" { send-keys -X search-backward "%%" }
bind -T copy-mode-vi :      command-prompt -p "(goto line)" { send-keys -X goto-line "%%" }
bind -T copy-mode-vi \#     send -FX search-backward "#{copy_cursor_word}"
bind -T copy-mode-vi \%     send -X next-matching-bracket
bind -T copy-mode-vi *      send -FX search-forward "#{copy_cursor_word}"
bind -T copy-mode-vi ,      send -X jump-reverse
bind -T copy-mode-vi C-u    send -X halfpage-up
bind -T copy-mode-vi C-d    send -X halfpage-down
bind -T copy-mode-vi C-v    send -X rectangle-toggle
bind -T copy-mode-vi w      send -X next-word
bind -T copy-mode-vi \{     send -X previous-paragraph
bind -T copy-mode-vi \}     send -X next-paragraph
bind -T copy-mode-vi √ñ      send -X previous-paragraph
bind -T copy-mode-vi √Ñ      send -X next-paragraph

# Mouse
bind -T root         WheelUpPane       if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -e }
bind -T copy-mode-vi WheelUpPane       send -X -N 5 scroll-up
bind -T copy-mode-vi WheelDownPane     send -X -N 5 scroll-down
bind -T copy-mode-vi MouseDrag1Pane    send -X begin-selection
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-no-clear
bind -T root         MouseDown1Pane    select-pane -t = \; send-keys -M
bind -T root         MouseDown1Status  select-window -t =
bind -T root         MouseDrag1Pane    if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -M }
bind -T root         MouseDrag1Border  resize-pane -M

# vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
